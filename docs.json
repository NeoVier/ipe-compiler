[{"name":"Ipe.Language","comment":" This module defines the AST (Abstract Syntax Tree) of Ipe programs, which means every (valid) Ipe program is represented as a tree.\n\n\n## Module definition\n\nThis is always the first line in an Ipe file. It tells us the name of the module and what types and functions other people can import from it.\n\n@docs ModuleDefinition, ModuleExport, ExportItem, TypeExport\n\n","unions":[{"name":"ExportItem","comment":" Each item can either be a function or a type. For functions, it's simple to export them: just type out their name. For types, they can export a different number of variants.\n","args":[],"cases":[["ExportFunction",["{ functionName : String.String }"]],["ExportType",["{ typeName : String.String, typeExport : Ipe.Language.TypeExport }"]]]},{"name":"ModuleExport","comment":" A module can export all of the functions and types inside of it, or it can export only some of them.\n","args":[],"cases":[["ExportEverything",[]],["ExportSome",["List.List Ipe.Language.ExportItem"]]]},{"name":"TypeExport","comment":" When exporting a type, we can:\n\n  - Export all variants\n  - Export no variants (opaque types)\n  - Export only some variants\n\n","args":[],"cases":[["ExportAllVariants",[]],["ExportNoVariant",[]],["ExportSomeVariants",["List.List String.String"]]]}],"aliases":[{"name":"ModuleDefinition","comment":" The module definition is the first thing we see when reading an Ipe file. It's the root of the module definition tree, which tells us the module name and all the functions and types the module exports.\n","args":[],"type":"{ moduleName : String.String, exports : Ipe.Language.ModuleExport }"}],"values":[],"binops":[]},{"name":"Ipe.Parser","comment":" This is the module responsible for transforming a `String` into an Ipe AST (as in the Ipe.Language module).\n\n@docs moduleDefinition\n\n","unions":[],"aliases":[],"values":[{"name":"moduleDefinition","comment":" Every Ipe file must start by defining a module. This function parses a module definition.\n\n    -- Modules can expose some definitions\n    module ModuleName exposing (OpaqueType, SemiOpaqueType(Variant1, Variant2), VisibleType(..), function)\n\n\n    -- Or all of them\n    module ModuleName exposing (..)\n\n","type":"Parser.Parser Ipe.Language.ModuleDefinition"}],"binops":[]}]